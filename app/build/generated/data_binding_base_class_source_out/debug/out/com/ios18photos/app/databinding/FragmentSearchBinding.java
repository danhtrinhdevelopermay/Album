// Generated by view binder compiler. Do not edit!
package com.ios18photos.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.ios18photos.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final LinearLayout emptySearchState;

  @NonNull
  public final ProgressBar loadingProgress;

  @NonNull
  public final TextInputEditText searchEditText;

  @NonNull
  public final RecyclerView searchResultsRecyclerView;

  @NonNull
  public final LinearLayout searchSuggestions;

  @NonNull
  public final RecyclerView suggestionsRecyclerView;

  private FragmentSearchBinding(@NonNull CoordinatorLayout rootView,
      @NonNull LinearLayout emptySearchState, @NonNull ProgressBar loadingProgress,
      @NonNull TextInputEditText searchEditText, @NonNull RecyclerView searchResultsRecyclerView,
      @NonNull LinearLayout searchSuggestions, @NonNull RecyclerView suggestionsRecyclerView) {
    this.rootView = rootView;
    this.emptySearchState = emptySearchState;
    this.loadingProgress = loadingProgress;
    this.searchEditText = searchEditText;
    this.searchResultsRecyclerView = searchResultsRecyclerView;
    this.searchSuggestions = searchSuggestions;
    this.suggestionsRecyclerView = suggestionsRecyclerView;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.empty_search_state;
      LinearLayout emptySearchState = ViewBindings.findChildViewById(rootView, id);
      if (emptySearchState == null) {
        break missingId;
      }

      id = R.id.loading_progress;
      ProgressBar loadingProgress = ViewBindings.findChildViewById(rootView, id);
      if (loadingProgress == null) {
        break missingId;
      }

      id = R.id.search_edit_text;
      TextInputEditText searchEditText = ViewBindings.findChildViewById(rootView, id);
      if (searchEditText == null) {
        break missingId;
      }

      id = R.id.search_results_recycler_view;
      RecyclerView searchResultsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (searchResultsRecyclerView == null) {
        break missingId;
      }

      id = R.id.search_suggestions;
      LinearLayout searchSuggestions = ViewBindings.findChildViewById(rootView, id);
      if (searchSuggestions == null) {
        break missingId;
      }

      id = R.id.suggestions_recycler_view;
      RecyclerView suggestionsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (suggestionsRecyclerView == null) {
        break missingId;
      }

      return new FragmentSearchBinding((CoordinatorLayout) rootView, emptySearchState,
          loadingProgress, searchEditText, searchResultsRecyclerView, searchSuggestions,
          suggestionsRecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
