// Generated by view binder compiler. Do not edit!
package com.ios18photos.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.ios18photos.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAlbumDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView albumTitle;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final LinearLayout emptyStateLayout;

  @NonNull
  public final ImageButton moreButton;

  @NonNull
  public final TextView photoCount;

  @NonNull
  public final RecyclerView photosRecyclerView;

  @NonNull
  public final ProgressBar progressBar;

  private ActivityAlbumDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView albumTitle, @NonNull AppBarLayout appBarLayout,
      @NonNull ImageButton backButton, @NonNull LinearLayout emptyStateLayout,
      @NonNull ImageButton moreButton, @NonNull TextView photoCount,
      @NonNull RecyclerView photosRecyclerView, @NonNull ProgressBar progressBar) {
    this.rootView = rootView;
    this.albumTitle = albumTitle;
    this.appBarLayout = appBarLayout;
    this.backButton = backButton;
    this.emptyStateLayout = emptyStateLayout;
    this.moreButton = moreButton;
    this.photoCount = photoCount;
    this.photosRecyclerView = photosRecyclerView;
    this.progressBar = progressBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAlbumDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAlbumDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_album_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAlbumDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.albumTitle;
      TextView albumTitle = ViewBindings.findChildViewById(rootView, id);
      if (albumTitle == null) {
        break missingId;
      }

      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.backButton;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.emptyStateLayout;
      LinearLayout emptyStateLayout = ViewBindings.findChildViewById(rootView, id);
      if (emptyStateLayout == null) {
        break missingId;
      }

      id = R.id.moreButton;
      ImageButton moreButton = ViewBindings.findChildViewById(rootView, id);
      if (moreButton == null) {
        break missingId;
      }

      id = R.id.photoCount;
      TextView photoCount = ViewBindings.findChildViewById(rootView, id);
      if (photoCount == null) {
        break missingId;
      }

      id = R.id.photosRecyclerView;
      RecyclerView photosRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (photosRecyclerView == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      return new ActivityAlbumDetailBinding((ConstraintLayout) rootView, albumTitle, appBarLayout,
          backButton, emptyStateLayout, moreButton, photoCount, photosRecyclerView, progressBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
