// Generated by view binder compiler. Do not edit!
package com.ios18photos.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ios18photos.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPhotoDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final ConstraintLayout bottomToolbar;

  @NonNull
  public final ImageButton deleteButton;

  @NonNull
  public final ImageButton editButton;

  @NonNull
  public final ImageButton favoriteButton;

  @NonNull
  public final ImageView photoImageView;

  @NonNull
  public final ImageButton shareButton;

  @NonNull
  public final ConstraintLayout topToolbar;

  private ActivityPhotoDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton backButton, @NonNull ConstraintLayout bottomToolbar,
      @NonNull ImageButton deleteButton, @NonNull ImageButton editButton,
      @NonNull ImageButton favoriteButton, @NonNull ImageView photoImageView,
      @NonNull ImageButton shareButton, @NonNull ConstraintLayout topToolbar) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.bottomToolbar = bottomToolbar;
    this.deleteButton = deleteButton;
    this.editButton = editButton;
    this.favoriteButton = favoriteButton;
    this.photoImageView = photoImageView;
    this.shareButton = shareButton;
    this.topToolbar = topToolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPhotoDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPhotoDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_photo_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPhotoDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.bottomToolbar;
      ConstraintLayout bottomToolbar = ViewBindings.findChildViewById(rootView, id);
      if (bottomToolbar == null) {
        break missingId;
      }

      id = R.id.deleteButton;
      ImageButton deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.editButton;
      ImageButton editButton = ViewBindings.findChildViewById(rootView, id);
      if (editButton == null) {
        break missingId;
      }

      id = R.id.favoriteButton;
      ImageButton favoriteButton = ViewBindings.findChildViewById(rootView, id);
      if (favoriteButton == null) {
        break missingId;
      }

      id = R.id.photoImageView;
      ImageView photoImageView = ViewBindings.findChildViewById(rootView, id);
      if (photoImageView == null) {
        break missingId;
      }

      id = R.id.shareButton;
      ImageButton shareButton = ViewBindings.findChildViewById(rootView, id);
      if (shareButton == null) {
        break missingId;
      }

      id = R.id.topToolbar;
      ConstraintLayout topToolbar = ViewBindings.findChildViewById(rootView, id);
      if (topToolbar == null) {
        break missingId;
      }

      return new ActivityPhotoDetailBinding((ConstraintLayout) rootView, backButton, bottomToolbar,
          deleteButton, editButton, favoriteButton, photoImageView, shareButton, topToolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
