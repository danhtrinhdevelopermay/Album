// Generated by view binder compiler. Do not edit!
package com.ios18photos.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.ios18photos.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPhotoGridBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageView favoriteIndicator;

  @NonNull
  public final ImageView photoImage;

  @NonNull
  public final View selectionOverlay;

  @NonNull
  public final ImageView videoIndicator;

  private ItemPhotoGridBinding(@NonNull MaterialCardView rootView,
      @NonNull ImageView favoriteIndicator, @NonNull ImageView photoImage,
      @NonNull View selectionOverlay, @NonNull ImageView videoIndicator) {
    this.rootView = rootView;
    this.favoriteIndicator = favoriteIndicator;
    this.photoImage = photoImage;
    this.selectionOverlay = selectionOverlay;
    this.videoIndicator = videoIndicator;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPhotoGridBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPhotoGridBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_photo_grid, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPhotoGridBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.favorite_indicator;
      ImageView favoriteIndicator = ViewBindings.findChildViewById(rootView, id);
      if (favoriteIndicator == null) {
        break missingId;
      }

      id = R.id.photo_image;
      ImageView photoImage = ViewBindings.findChildViewById(rootView, id);
      if (photoImage == null) {
        break missingId;
      }

      id = R.id.selection_overlay;
      View selectionOverlay = ViewBindings.findChildViewById(rootView, id);
      if (selectionOverlay == null) {
        break missingId;
      }

      id = R.id.video_indicator;
      ImageView videoIndicator = ViewBindings.findChildViewById(rootView, id);
      if (videoIndicator == null) {
        break missingId;
      }

      return new ItemPhotoGridBinding((MaterialCardView) rootView, favoriteIndicator, photoImage,
          selectionOverlay, videoIndicator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
